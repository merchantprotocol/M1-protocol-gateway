<?xml version="1.0"?>
<!--
/**
 * Merchant Protocol
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Merchant Protocol Commercial License (MPCL 1.0)
 * that is bundled with this package in the file LICENSE.md.
 * It is also available through the world-wide-web at this URL:
 * https://merchantprotocol.com/commercial-license/
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to info@merchantprotocol.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade to newer
 * versions in the future. If you wish to customize the extension for your
 * needs please refer to http://www.merchantprotocol.com for more information.
 *
 * @category   MP
 * @package    MP_Debug
 * @copyright  Copyright (c) 2006-2016 Merchant Protocol LLC. and affiliates (https://merchantprotocol.com/)
 * @license    https://merchantprotocol.com/commercial-license/  Merchant Protocol Commercial License (MPCL 1.0)
 */
-->
<config>
    <modules>
        <MP_Debug>
            <version>1.6.0</version>
        </MP_Debug>
    </modules>

    <global>
        <models>
            <mp_debug>
                <class>MP_Debug_Model</class>
                <resourceModel>mp_debug_resource</resourceModel>
            </mp_debug>
            <mp_debug_resource>
                <class>MP_Debug_Model_Resource</class>
                <entities>
                    <request_info>
                        <table>mp_debug_request_info</table>
                    </request_info>
                </entities>
            </mp_debug_resource>
            <core>
                <rewrite>
                    <email>MP_Debug_Model_Core_Email</email>
                    <email_template>MP_Debug_Model_Core_Email_Template</email_template>
                </rewrite>
            </core>
        </models>

        <resources>
            <mp_debug_setup>
                <setup>
                    <module>MP_Debug</module>
                </setup>
            </mp_debug_setup>
        </resources>

        <blocks>
            <mp_debug>
                <class>MP_Debug_Block</class>
            </mp_debug>
        </blocks>

        <helpers>
            <mp_debug>
                <class>MP_Debug_Helper</class>
            </mp_debug>
        </helpers>

        <events>
            <!-- Start of request processing -->
            <controller_front_init_before>
                <observers>
                    <mp_debug>
                        <type>singleton</type>
                        <class>mp_debug/observer</class>
                        <method>onControllerFrontInitBefore</method>
                    </mp_debug>
                </observers>
            </controller_front_init_before>

            <!-- Records all instantiated blocks -->
            <controller_action_layout_generate_blocks_after>
                <observers>
                    <debug_observer>
                        <type>singleton</type>
                        <class>mp_debug/observer</class>
                        <method>onLayoutGenerate</method>
                    </debug_observer>
                </observers>
            </controller_action_layout_generate_blocks_after>

            <!-- Records rendered blocks and their rendering start time -->
            <core_block_abstract_to_html_before>
                <observers>
                    <debug_observer>
                        <type>singleton</type>
                        <class>mp_debug/observer</class>
                        <method>onBlockToHtml</method>
                    </debug_observer>
                </observers>
            </core_block_abstract_to_html_before>

            <!-- Records blocks rendering end time -->
            <core_block_abstract_to_html_after>
                <observers>
                    <debug_observer>
                        <type>singleton</type>
                        <class>mp_debug/observer</class>
                        <method>onBlockToHtmlAfter</method>
                    </debug_observer>
                </observers>
            </core_block_abstract_to_html_after>

            <!-- Records request properties (current route, original request path, etc) -->
            <controller_action_postdispatch>
                <observers>
                    <debug_observer>
                        <type>singleton</type>
                        <class>mp_debug/observer</class>
                        <method>onActionPostDispatch</method>
                    </debug_observer>
                </observers>
            </controller_action_postdispatch>

            <!-- Records loaded collections -->
            <core_collection_abstract_load_before>
                <observers>
                    <debug_observer>
                        <type>singleton</type>
                        <class>mp_debug/observer</class>
                        <method>onCollectionLoad</method>
                    </debug_observer>
                </observers>
            </core_collection_abstract_load_before>

            <!-- Records loaded EAV collections -->
            <eav_collection_abstract_load_before>
                <observers>
                    <debug_observer>
                        <type>singleton</type>
                        <class>mp_debug/observer</class>
                        <method>onCollectionLoad</method>
                    </debug_observer>
                </observers>
            </eav_collection_abstract_load_before>

            <!-- Records loaded models -->
            <model_load_after>
                <observers>
                    <debug_observer>
                        <type>singleton</type>
                        <class>mp_debug/observer</class>
                        <method>onModelLoad</method>
                    </debug_observer>
                </observers>
            </model_load_after>


            <!-- TODO: candidate to be removed -->
            <controller_action_predispatch>
                <observers>
                    <debug_observer>
                        <type>singleton</type>
                        <class>mp_debug/observer</class>
                        <method>onActionPreDispatch</method>
                    </debug_observer>
                </observers>
            </controller_action_predispatch>

            <!-- Last change from Magento to save everything, we'll also try to save it from a PHP shutdown callback -->
            <controller_front_send_response_after>
                <observers>
                    <mp_debug>
                        <type>singleton</type>
                        <class>mp_debug/observer</class>
                        <method>onControllerFrontSendResponseAfter</method>
                    </mp_debug>
                </observers>
            </controller_front_send_response_after>

            <!-- Instruct website restriction module to allow our requests -->
            <websiterestriction_frontend>
                <observers>
                    <mp_debug>
                        <type>singleton</type>
                        <class>mp_debug/observer</class>
                        <method>onWebsiteRestriction</method>
                    </mp_debug>
                </observers>
            </websiterestriction_frontend>
        </events>
    </global>

    <frontend>
        <routers>
            <mp_debug>
                <use>standard</use>
                <args>
                    <module>MP_Debug</module>
                    <frontName>mp_debug</frontName>
                </args>
            </mp_debug>
        </routers>

        <layout>
            <updates>
                <mp_debug>
                    <file>mp_debug.xml</file>
                </mp_debug>
            </updates>
        </layout>


    </frontend>

    <!-- adminhtml configuration -->
    <adminhtml>
        <layout>
            <updates>
                <mp_debug>
                    <file>mp_debug.xml</file>
                </mp_debug>
            </updates>
        </layout>
    </adminhtml>

    <crontab>
        <jobs>
            <mp_debug_delete_expired_requests>
                <schedule>
                    <cron_expr>0 5 * * *</cron_expr>
                </schedule>
                <run>
                    <model>mp_debug/cron::deleteExpiredRequests</model>
                </run>
            </mp_debug_delete_expired_requests>
        </jobs>
    </crontab>

    <!-- Default settings -->
    <default>
        <mp_debug>
            <options>
                <enable>1</enable>
                <persist>1</persist>
                <persist_expiration>1</persist_expiration>
                <force_varien_profile>1</force_varien_profile>
                <use_store_locale>0</use_store_locale>
                <capture_sql_stacktrace>1</capture_sql_stacktrace>
                <strip_zend_db_traces>1</strip_zend_db_traces>
                <trim_magento_basedir>1</trim_magento_basedir>
            </options>
        </mp_debug>
    </default>

    <phpunit>
        <suite>
            <modules>
                <MP_Debug />
            </modules>
        </suite>
    </phpunit>
</config>
